---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gitea
  labels:
    app: gitea
spec:
  template:
    metadata:
      name: gitea
      labels:
        app: gitea
    spec:
      containers:
        - name: gitea
          image: gitea/gitea:latest
          imagePullPolicy: Always
          volumeMounts:
            - mountPath: "/var/lib/gitea"
              name: "data"
            - mountPath: "/data"
              name: "data"
          ports:
            - containerPort: 22
              name: ssh
              protocol: TCP
            - containerPort: 3000
              name: http
              protocol: TCP
      restartPolicy: Always
      volumes:
        - name: "data"
          persistentVolumeClaim:
            claimName: gitea-pvc
  selector:
    matchLabels:
      app: gitea
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: gitea-pvc
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: local-path
  resources:
    requests:
      storage: 25Gi
---
# Using cluster mode
apiVersion: v1
kind: Service
metadata:
  name: gitea-web
  labels:
    app: gitea-web
spec:
  ports:
    - port: 80
      targetPort: 3000
      name: http
  selector:
    app: gitea
---
# Using node-port mode
# This mainly open a specific TCP port for SSH usage on each host,
# so you can use a proxy layer to handle it(e.g. slb, nginx)
apiVersion: v1
kind: Service
metadata:
  name: gitea-ssh
  labels:
    app: gitea-ssh
spec:
  ports:
    - port: 22
      targetPort: 22
      nodePort: 30022
      name: ssh
  selector:
    app: gitea
  type: NodePort
---
# Ingress is always suitable for HTTP usage,
# we suggest using an proxy layer such as slb to send traffic to different ports.
# Usually 80/443 for web and 22 directly for SSH.
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: gitea
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    cert-manager.io/issuer: "letsencrypt-staging"
spec:
  rules:
    - host: git.flowtr.dev
      http:
        paths:
          - path: /*
            pathType: Prefix
            backend:
              service:
                name: gitea-web
                port:
                  number: 80
  tls:
    - hosts:
        - git.flowtr.dev
      secretName: gitea-tls # Name of the secret
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: gitea-tls
spec:
  secretName: gitea-tls
  issuerRef:
    name: letsencrypt-staging
  dnsNames:
    - git.flowtr.dev
